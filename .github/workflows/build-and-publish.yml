name: Build and Release to PyPI

on:
  release:
    types: [published]  # запускается когда релиз помечен как "Published"

jobs:
  tests:
    name: Tests (matrix)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python -m pip install build pytest

      - name: Run tests
        run: |
          pytest test/test_smsru.py
          pytest test/test_live.py

  publish-pypi:
    name: Build & Publish to PyPI
    runs-on: ubuntu-latest
    needs: tests
    # защита: публикуем только если тег релиза начинается с v
    if: startsWith(github.event.release.tag_name, 'v')
    steps:
      - name: Checkout the release tag
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Set up Python (build)
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Build distributions
        run: |
          python -m build

      - name: Upload artifact (dist) for inspection
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.event.release.tag_name }}
          path: dist/*

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload --non-interactive dist/*
